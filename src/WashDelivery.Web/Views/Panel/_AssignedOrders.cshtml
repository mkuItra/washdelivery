@model IEnumerable<WashDelivery.Application.DTOs.Orders.OrderDto>
@using WashDelivery.Domain.Enums
@using WashDelivery.Domain.Constants
@using WashDelivery.Web.Helpers

@if (Model.Any())
{
    <div class="space-y-4">
        @foreach (var order in Model)
        {
            <div class="bg-white shadow ring-1 ring-gray-900/5 rounded-lg p-4" data-order-id="@order.Id">
                <div class="flex flex-col space-y-2">
                    <div class="flex justify-between items-start">
                        <p class="text-sm font-medium text-gray-900">Zamówienie #@order.Id</p>
                        <span class="inline-flex items-center rounded-md px-2 py-1 text-xs font-medium ring-1 ring-inset
                            @(order.Status == OrderStatus.Delivered ? "bg-green-50 text-green-700 ring-green-600/20" :
                              order.Status == OrderStatus.Cancelled ? "bg-red-50 text-red-700 ring-red-600/20" :
                              "bg-blue-50 text-blue-700 ring-blue-700/10")">
                            @OrderStatusDisplayNames.GetDisplayName(order.Status)
                        </span>
                    </div>
                    @if (order.Status == OrderStatus.PickupInProgress)
                    {
                        <p class="text-sm text-gray-500">
                            Odbiór: @order.PickupAddress.Street @order.PickupAddress.BuildingNumber, @order.PickupAddress.City
                        </p>
                    }
                    else
                    {
                        <p class="text-sm text-gray-500">
                            Dostawa: @order.DeliveryAddress.Street @order.DeliveryAddress.BuildingNumber, @order.DeliveryAddress.City
                        </p>
                    }
                    <p class="text-sm text-gray-500">
                        Czas: @DateTimeHelper.FormatToLocalTime(order.PickupTime)
                    </p>
                    <p class="text-sm font-medium text-indigo-600">
                        Opłata: @order.DeliveryFee.ToString("C")
                    </p>
                    <div class="flex gap-2 mt-2">
                        @if (order.Status == OrderStatus.PickupInProgress)
                        {
                            <form action="/Order/ConfirmPickup" method="post" class="flex-1">
                                @Html.AntiForgeryToken()
                                <input type="hidden" name="orderId" value="@order.Id" />
                                <button type="submit" class="w-full rounded-md bg-green-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-green-500">
                                    Potwierdź odbiór
                                </button>
                            </form>
                        }
                        @if (order.Status == OrderStatus.OutForDelivery)
                        {
                            <form action="/Order/ConfirmDelivery" method="post" class="flex-1">
                                @Html.AntiForgeryToken()
                                <input type="hidden" name="orderId" value="@order.Id" />
                                <button type="submit" class="w-full rounded-md bg-green-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-green-500">
                                    Potwierdź dostarczenie
                                </button>
                            </form>
                        }
                    </div>
                </div>
            </div>
        }
    </div>
}
else
{
    <p class="text-sm text-gray-500">Brak przypisanych zamówień.</p>
} 